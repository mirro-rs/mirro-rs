name: CI

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

jobs:
  lints:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: 'rustfmt, clippy'

      - uses: Swatinem/rust-cache@v2

      - name: Run rustfmt
        run: cargo fmt --all -- --check

      - name: Run clippy
        uses: giraffate/clippy-action@v1
        with:
          reporter: 'github-check'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_error: true
          clippy_flags: --all-targets --all-features

  rust:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly

    steps:
      - uses: actions/checkout@v3

      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: llvm-tools-preview
      - uses: Swatinem/rust-cache@v2
      - name: Compile Tests
        run: cargo test --no-run --all-features
      - name: Test
        run: cargo test --all-features
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo llvm-cov
        run: cargo llvm-cov --workspace --locked --all-features --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  hack:
    runs-on: ubuntu-latest
    name: ubuntu / stable / features
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - name: cargo hack
        run: cargo hack --feature-powerset check --all

  msrv:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        msrv: ["1.71.0"] # systemd-journal-logger
    name: ubuntu / ${{ matrix.msrv }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install ${{ matrix.msrv }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.msrv }}
      - name: cargo +${{ matrix.msrv }} check
        run: cargo check --all-features
